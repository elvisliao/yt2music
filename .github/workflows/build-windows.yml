name: Build Windows Executable

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify installation
        run: |
          python --version
          pip list
          python -c "import customtkinter; print('CustomTkinter version:', customtkinter.__version__)"
          python -c "import yt_dlp; print('yt-dlp version:', yt_dlp.version.__version__)"

      - name: Run tests
        run: |
          python functional_test.py
          python test.py

       - name: Build executable
         run: |
           pyinstaller --onefile --windowed --name "YouTube_MP3_Downloader" --optimize=2 --strip --add-data "python311.dll;." --hidden-import=customtkinter --hidden-import=yt_dlp --hidden-import=tkinter --hidden-import=tkinter.ttk --hidden-import=tkinter.messagebox --hidden-import=tkinter.filedialog --hidden-import=tkinter.simpledialog main.py

      - name: Verify executable
        run: |
          if (Test-Path "dist\YouTube_MP3_Downloader.exe") {
            $file = Get-Item "dist\YouTube_MP3_Downloader.exe"
            Write-Host "Executable created successfully!"
            Write-Host "File size: $([math]::Round($file.Length / 1MB, 2)) MB"
            Write-Host "File path: $($file.FullName)"
          } else {
            Write-Error "Executable not found!"
            exit 1
          }

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: YouTube_MP3_Downloader_Windows
          path: dist/YouTube_MP3_Downloader.exe
          retention-days: 30

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/YouTube_MP3_Downloader.exe
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
